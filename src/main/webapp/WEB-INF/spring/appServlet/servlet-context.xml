<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<default-servlet-handler />
	
	<context:annotation-config />
	
	<!-- Enables the Spring MVC @Controller programming model -->	
   	<context:component-scan base-package="purple">
		<context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
 		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>				
		<context:include-filter type="regex" expression="(service|controller|dao)\..*"/>
	</context:component-scan>
	
	<!-- <annotation-driven /> -->

<!--  	<context:component-scan base-package="purple">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan> -->
	
	<annotation-driven>
    	<argument-resolvers>
            <beans:bean class="purple.command.resolver.CustomMapArgumentResolver"></beans:bean>       
        </argument-resolvers>
    </annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- <resources mapping="/upload/**" location="/upload/" /> -->

	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="cubrid.jdbc.driver.CUBRIDDriver" />
		<beans:property name="url" value="jdbc:cubrid:localhost:30000:people-purple:::?charset=UTF-8" />
		<beans:property name="username" value="dba" />
		<beans:property name="password" value="purple" />
	</beans:bean>
	
	<!-- Hibernate session factory -->
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.CUBRIDDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">validate</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>purple.domain.User</beans:value>
				<beans:value>purple.domain.Party</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- <beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->
	
  	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

   	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />

  	<!-- <beans:bean id="mainService" class="purple.main.service.impl.MainServiceImpl" /> -->
		
  	<beans:bean id="mainDao" class="purple.main.dao.impl.MainDaoImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
  	<beans:bean id="partyDao" class="purple.party.dao.impl.PartyDaoImpl">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
</beans:beans>